name: 'Get idf-build-apps arguments'
inputs:
  paths:
    description: space-separated paths to the esp-idf project
    default: .
  build_dir:
    description: build directory
    default: build_@t
  parallel_index:
    description: 1-based index of the parallel job
    default: "1"
  parallel_count:
    description: total number of parallel jobs
    default: "1"
  default_build_targets:
    description: space-separated default build target list. by default all ESP-IDF supported targets
  manifest-filepatterns:
    description: 'Manifest file patterns'
    default: '**/.build-test-rules.yml'
  additional_arguments:
    description: 'Additional arguments to pass to idf-build-apps'
outputs:
  modified_files:
    description: 'Modified files'
    value: ${{ steps.set-output.outputs.modified_files }}
  idf_build_apps_args:
    description: 'idf-build-apps arguments'
    value: ${{ steps.set-output.outputs.idf_build_apps_args }}
runs:
  using: "composite"
  steps:
    - name: set-default-values
      id: set-default-values
      shell: bash
      run: |
        if [ -z "$BUILD_AND_TEST_ALL_APPS" ]; then
            echo "BUILD_AND_TEST_ALL_APPS=0" >> $GITHUB_ENV
        fi
        if [ -z "$BUILD_ONLY" ]; then
            echo "BUILD_ONLY=0" >> $GITHUB_ENV
        fi
    - id: fix-git-repo-permissions
      # Needed by the next git diff step.
      # See https://github.com/actions/runner/issues/2033
      if: ${{ github.event_name == 'pull_request' }}
      shell: bash
      run: |
        build_dir=$PWD
        cd /
        git config --global --add safe.directory $build_dir
        cd -
    - id: apply-build-and-test-all-apps
      if: ${{ github.ref == github.default_branch || contains(github.event.pull_request.labels.*.name, 'build-and-test-all-apps') }}
      shell: bash
      run: echo "BUILD_AND_TEST_ALL_APPS=1" >> $GITHUB_ENV
    - id: apply-build-only
      if: ${{ contains(github.event.pull_request.labels.*.name, 'build-only') }}
      shell: bash
      run: echo "BUILD_ONLY=1" >> $GITHUB_ENV
    - id: get-pr-changes
      if: ${{ github.event_name == 'pull_request' && env.BUILD_AND_TEST_ALL_APPS == '0' }}
      shell: bash
      run: |
        git fetch --recurse-submodules=no origin ${{ github.base_ref }}:base_ref
        git fetch --recurse-submodules=no origin pull/${{ github.event.pull_request.number }}/head:pr_ref
        git diff --name-only -r base_ref pr_ref > changed_files.txt
        python get_idf_build_apps_args.py changed_files.txt idf_build_apps_args.txt -v
        cat idf_build_apps_args.txt
    - id: set-output
      shell: bash
      run: |
        echo "modified_files=$(cat changed_files.txt | xargs)" >> $GITHUB_OUTPUT
        echo "idf_build_apps_args=$(cat idf_build_apps_args.txt)" >> $GITHUB_OUTPUT
        echo "::set-output name=upload_filepatterns::$(python get_upload_filepatterns.py ${{ inputs.paths }})"
    - id: run-build-apps
      shell: bash
      run: |
        . $IDF_PATH/export.sh
        echo "IDF_VERSION=$(idf.py --version | cut -d' ' -f 2 | cut -d'-' -f 1)" >> $GITHUB_ENV
        pip install -U idf-build-apps
        idf-build-apps build \
          -v \
          --paths ${{ inputs.paths }} \
          --build-dir ${{ inputs.build_dir }} \
          --recursive \
          --keep-going \
          --check-warnings \
          --collect-app-info build_info_@p.txt \
          --build-log-filename build.log \
          --parallel-index ${{ inputs.parallel_index }} \
          --parallel-count ${{ inputs.parallel_count }} \
          --default-build-targets ${{ inputs.default_build_targets }} \
          --manifest-rootpath $IDF_PATH \
          --manifest-filepatterns ${{ inputs.manifest-filepatterns }} \
          ${{ steps.set-output.outputs.idf_build_apps_args }} \
          ${{ inputs.additional_arguments || '' }}
    - id: upload-built-binaries
      uses: actions/upload-artifact@v4
      with:
        name: app_binaries_${{ env.IDF_VERSION }}_${{ inputs.parallel_index }}
        path: |
          ${{ steps.set-output.outputs.upload_filepatterns }}
          build_info_*.txt
