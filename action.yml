name: 'Hello World'
description: 'Greet someone'
inputs:
  manifest-filepatterns:
    description: 'Manifest file patterns'
    default: '**/.build-test-rules.yml'
outputs:
  modified_files:
    description: 'Modified files'
    value: ${{ steps.get-pr-changes.outputs.modified_files }}
  idf_build_apps_args:
    description: 'idf-build-apps arguments'
    value: ${{ steps.get-pr-changes.outputs.idf_build_apps_args }}
runs:
  using: "composite"
  steps:
    - name: set-default-values
      id: set-default-values
      shell: bash
      run: |
        echo "BUILD_AND_TEST_ALL_APPS=0" >> $GITHUB_ENV
        echo "BUILD_ONLY=0" >> $GITHUB_ENV
        echo "MODIFIED_FILES=" >> $GITHUB_ENV
        echo "IDF_BUILD_APPS_ARGS=" >> $GITHUB_ENV
    - id: apply-build-and-test-all-apps
      if: ${{ github.ref == github.default_branch || contains(github.event.pull_request.labels.*.name, 'build-and-test-all-apps') }}
      shell: bash
      run: echo "BUILD_AND_TEST_ALL_APPS=1" >> $GITHUB_ENV
    - id: apply-build-only
      if: ${{ contains(github.event.pull_request.labels.*.name, 'build-only') }}
      shell: bash
      run: echo "BUILD_ONLY=1" >> $GITHUB_ENV
    - id: get-pr-changes
      if: ${{ github.event_name == 'pull_request' && env.BUILD_AND_TEST_ALL_APPS == '0' }}
      shell: bash
      run: |
        git fetch --recurse-submodules=no origin ${{ github.base_ref }}:base_ref
        git fetch --recurse-submodules=no origin pull/${{ github.event.pull_request.number }}/head:pr_ref
        git diff --name-only -r base_ref pr_ref > changed_files.txt
        python get_idf_build_apps_args.py changed_files.txt idf_build_apps_args.txt -v

        echo "MODIFIED_FILES=$(cat changed_files.txt | xargs)" >> $GITHUB_ENV
        echo "IDF_BUILD_APPS_ARGS=$(cat idf_build_apps_args.txt)" >> $GITHUB_ENV
    - id: set-output
      shell: bash
      run: |
        echo "modified_files=$(echo $MODIFIED_FILES)" >> $GITHUB_OUTPUT
        echo "idf_build_apps_args=$(echo $IDF_BUILD_APPS_ARGS)" >> $GITHUB_OUTPUT
